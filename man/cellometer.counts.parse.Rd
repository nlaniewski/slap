% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellometer.counts.parse.R
\name{cellometer.counts.parse}
\alias{cellometer.counts.parse}
\title{Parse a Cellometer Counts File}
\usage{
cellometer.counts.parse(
  counts.csv.path,
  convert.date.time = TRUE,
  return.assay.type = "PBMC",
  make.wide = TRUE
)
}
\arguments{
\item{counts.csv.path}{Character string; file path to a Cellometer counts file (.csv).}

\item{convert.date.time}{Logical; default \code{TRUE}; splits the 'Date Time' column and converts to class \link[data.table]{as.IDate} and \link[data.table]{as.ITime}.}

\item{return.assay.type}{Character string; default 'PBMC'; returns matching counts.  Other assay types might include: '1.6\% fixed'.}

\item{make.wide}{Logical; default \code{TRUE}; make a wide-format (single-row per sample) data.table.}
}
\value{
a \link[data.table]{data.table} of cell counts
}
\description{
Parse a Cellometer Counts File
}
\note{
As used in a streamlined workflow, the 'sample.name' column will have a 'batch order': a sequence of numbers 1:n number of samples; the batch order, along with 'date.time', should produce a unique subset for merging with other workflow metadata.
}
\examples{

counts.csv.path<-list.files(
system.file("extdata",package="slap"),
pattern="cellometer_counts.csv", full.names = TRUE
)

cellometer.counts.parse(counts.csv.path,make.wide=FALSE)
counts<-cellometer.counts.parse(counts.csv.path,make.wide=TRUE)

##samples in a total volume of 2.2 mL
counts[,volume.ml := 2.2]

##total number of live cells
counts[,total.live:=volume.ml*concentration.live]

##extract batch order
counts[,batch.order:=sub("^.*_ON_","",sample.name)]

##merge with some metadata
mdat<-data.table::data.table(
subject.id = c(paste0("Subject",rep(1:6,each=3)),"Control1"),
visit.id = c(paste0("V",rep(1:3,times=6)),"Vctrl")
)
mdat[,sample.id:=paste(subject.id,visit.id,sep="_")]
mdat[,batch.order:=sprintf("\%02d",seq(.N))]

mdat[counts,on='batch.order']
}
